[tool.poetry]
name = "backend"
version = "0.1.0"
description = "a python serverless function"
authors = ["tokcide <89933773+tokcide@users.noreply.github.com>"]
readme = "README.md"

# packages = [{ include = "backend", from = "src" }]
[tool.poetry.dependencies]
python = ">=3.9,<3.11"
fastapi = "^0.95.2"
tortoise-orm = { extras = ["asyncpg"], version = "^0.20.0" }

[tool.poetry.group.fastapi-extensions.dependencies]
slowapi = "^0.1.8"
asgi-correlation-id = "^4.2.0"
fastapi-admin = "^1.0.4"
fastapi-login = "^1.9.1"
fastapi-mail = { version = "1.3.*", extras = ["httpx"] }
fastapi-utils = "^0.2.1"
fastapi-class = "^3.3.0"

[tool.poetry.group.api.dependencies]
instagrapi = "^1.18.5"
praw = "^7.7.1"
copydetect = "^0.4.6"

[tool.poetry.group.dev.dependencies]
aerich = "^0.7.2"
mypy = "^1.4.1"
pytest = "7.4.2"
pytest-asyncio = "^0.21.1"
pytest-cov = "4.1.0"
pytest-sugar = "0.9.7"
pre-commit = "^3.3.3"
uvicorn = { extras = ["standard"], version = "^0.23.1" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
source = ["backend_fastapipy"]

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:"]
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html:'../../coverage/apps/backend-fastapipy/html' --cov-report xml:'../../coverage/apps/backend-fastapipy/coverage.xml' --html='../../reports/apps/backend-fastapipy/unittests/html/index.html' --junitxml='../../reports/apps/backend-fastapipy/unittests/junit.xml'"
filterwarnings = ["ignore::DeprecationWarning"]
testpaths = ["tests/"]

[tool.aerich]
location = "./migrations"
tortoise_orm = "app.core.init_app.TORTOISE_ORM"

[tool.ruff]
exclude = [".git", "__pycache__", "build", "dist", ".tox", "venv", ".venv", ".pytest_cache"]

# max-line-length = 120
[tool.black]
line-lenght = 120

[tool.mypy]
plugins = ["pydantic.mypy"]
ignore_missing_imports = true
disable_error_code = "misc"
disallow_untyped_calls = true
exclude = ["_legacy.py$"]

# explicit_package_bases = true
# namespace_packages = true
# show_error_codes = true
# warn_unused_ignores = true
# follow_imports = "silent"
# warn_redundant_casts = true
# disallow_any_generics = true
# check_untyped_defs = true
# no_implicit_reexport = true
# # for strict mypy: (this is the tricky one :-))
# disallow_untyped_defs = true
[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.yapf]
align_closing_bracket_with_visual_indent = true
allow_multiline_dictionary_keys = true
allow_multiline_lambdas = true
# allow_split_before_default_or_named_assigns
# allow_split_before_dict_value = false
# arithmetic_precedence_indication = false
blank_line_before_class_docstring = false
blank_line_before_module_docstring = false
blank_line_before_nested_class_or_def = true
# blank_lines_around_top_level_definition = 2
# blank_lines_between_top_level_imports_and_variables = 2
# coalesce_brackets = true
column_limit = 120
dedent_closing_brackets = true
each_dict_entry_on_separate_line = true
indent_blank_lines = true
indent_width = 2
# indent_closing_brackets = true
join_multiple_lines = true
spaces_around_dict_delimiters = true
spaces_around_list_delimiters = true
spaces_around_tuple_delimiters = true
spaces_before_comment = [15, 20]
split_all_comma_separated_values = true
split_all_top_level_comma_separated_values = true
split_before_dot = true
